{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["CLICKBAIT_EXAMPLES","api_request","instances","callback","a","axios","get","params","join","then","response","data","makeArticles","articles","articleClickbait","console","log","map","article","i","style","padding","marginTop","marginBottom","borderStyle","borderWidth","borderColor","fontWeight","fontSize","color","opacity","App","useState","text","setText","setArticleClickbait","inputClickbait","setInputClickbait","useEffect","margin","textAlign","display","flexDirection","justifyContent","alignItems","minWidth","placeholder","onChange","e","target","value","onClick","cursor","backgroundColor","borderRadius","marginLeft","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,I,6BCKTA,EAAmB,CACvB,gDACA,yEACA,gDACA,2DACA,kDACA,sCACA,8BAGIC,EAAW,uCAAG,WAAOC,EAAUC,GAAjB,SAAAC,EAAA,+EACXC,IAAMC,IAAN,mEAA8E,CAClFC,OAAQ,CAACL,UAAUA,EAAUM,KAAK,QAElCC,MAAK,SAAAC,GACJP,EAASO,EAASC,KAAKD,cALT,2CAAH,wDAUXE,EAAe,SAACC,EAASC,GAE7B,OADAC,QAAQC,IAAIF,GACLD,EAASI,KAAI,SAACC,EAAQC,GAAT,OAAa,sBAAKC,MAAO,CAACC,QAAQ,GAAGC,UAAU,GAAGC,aAAa,GAAIC,YAAY,QAAQC,YAAY,EAAEC,YAAY,WAApG,UAC/B,sBAAKN,MAAO,CAACO,WAAW,OAAOC,SAAS,GAAGC,OAAuB,OAAhBf,QAAgB,IAAhBA,OAAA,EAAAA,EAAmBK,IAAK,GAAM,MAAQ,SAAxF,cAAoGD,MACpF,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAmBK,IAAK,sBAAKC,MAAO,CAACQ,SAAS,GAAGC,OAAuB,OAAhBf,QAAgB,IAAhBA,OAAA,EAAAA,EAAmBK,IAAK,GAAM,MAAQ,SAAtE,iBAAkFL,QAAlF,IAAkFA,OAAlF,EAAkFA,EAAmBK,GAArG,2BAAsI,wBAC9J,qBAAKC,MAAO,CAACU,QAAS,IAAtB,s3BA0BWC,MArBf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNC,EADM,KACDC,EADC,OAEkCF,mBAAS,IAF3C,mBAENlB,EAFM,KAEWqB,EAFX,OAG8BH,mBAAS,IAHvC,mBAGNI,EAHM,KAGSC,EAHT,KAKb,OADAC,qBAAU,kBAAIrC,EAAYD,EAAmBmC,KAAqB,IAEhE,sBAAKf,MAAO,CAACmB,OAAO,IAApB,UACI,qBAAKnB,MAAO,CAACoB,UAAU,SAAUZ,SAAU,GAAGD,WAAW,QAAzD,gCACA,sBAAKP,MAAO,CAACqB,QAAQ,OAAOC,cAAc,MAAMC,eAAe,SAASC,WAAW,SAASL,OAAQ,IAApG,UACE,uBAAOnB,MAAO,CAACyB,SAAS,KAAMC,YAAa,2BAA4BC,SAAU,SAAAC,GAAC,OAAEd,EAAQc,EAAEC,OAAOC,QAAQA,MAAOjB,IACpH,qBAAKkB,QAAS,kBAAIlD,EAAY,CAACgC,GAAMI,IAAoBjB,MAAO,CAACgC,OAAO,UAAUC,gBAAgB,QAASxB,MAAM,QAASyB,aAAc,GAAGC,WAAW,GAAGlC,QAAQ,IAAjK,wBAEFe,EAAeoB,OAAS,sBAAKpC,MAAO,CAACoB,UAAU,UAAvB,oCAA0DJ,EAAe,MAAY,wBAC/G,qBAAKhB,MAAO,CAACoB,UAAU,SAAUZ,SAAU,GAAGD,WAAW,OAAOY,OAAO,IAAvE,+BACF,qBAAKnB,MAAO,CAACmB,OAAO,IAApB,SACH3B,EAAaZ,EAAmBc,SCtClB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ac8cf74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\nimport {useEffect,useState} from \"react\"\n\nconst CLICKBAIT_EXAMPLES=[\n  'Which TV Female Friend Group Do You Belong In',\n  'An Artist Drew Disney Men As Justin Bieber And The Outcome Is Glorious',\n  '2 Somali-Americans Charged With Aiding Terror',\n  'With Troubled Coyotes, Gretzky Called On as Savior Again',\n  '21 Dogs Who Are Thankful For Their Best Friends',\n  'Obama Welcomes Specter to the Party',\n  \"I'm An Atheist But I'm Not\"\n]\n\nconst api_request = async (instances,callback) =>{\n  return axios.get(`https://spwe9p1ih9.execute-api.us-east-1.amazonaws.com/api/query`, {\n     params: {instances:instances.join(',')}\n    })\n    .then(response=> {\n      callback(response.data.response)\n      })\n// Mostly the same, I was just experimenting with different approaches, tried link.click, iframe and other solutions\n    }\n\nconst makeArticles = (articles,articleClickbait)=>{\n  console.log(articleClickbait)\n  return articles.map((article,i)=><div style={{padding:10,marginTop:10,marginBottom:10, borderStyle:'solid',borderWidth:1,borderColor:'#e3e3e3'}}>\n    <div style={{fontWeight:'bold',fontSize:22,color: articleClickbait?.[i] > 0.5 ? \"red\" : 'black'}}> {article}</div>\n   {articleClickbait?.[i] ? <div style={{fontSize:14,color: articleClickbait?.[i] > 0.5 ? \"red\" : 'green'}} >{articleClickbait?.[i]}% chance of Clickbait</div> : <div/>}\n    <div style={{opacity: 0.6}}>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi rutrum, ipsum nec vulputate porttitor, urna turpis tristique ante, nec molestie turpis orci non est. Cras rutrum eros at hendrerit aliquam. Maecenas consectetur scelerisque enim. Proin eu varius justo. Sed eleifend, ipsum eget commodo mattis, velit enim porttitor arcu, nec finibus eros orci sed ex. Etiam egestas, libero ornare gravida mattis, mauris neque iaculis leo, eget dignissim tortor mi bibendum lacus. Sed ut metus sed orci cursus vestibulum. Vestibulum molestie arcu non magna blandit fermentum. Nullam eu felis viverra urna eleifend finibus finibus ut orci. Quisque tempus dui est, a dapibus orci dictum interdum. Ut magna nibh, feugiat at magna vitae, convallis suscipit enim. Ut tincidunt nibh a aliquam pulvinar. Aliquam et libero neque. Aliquam commodo neque at ipsum posuere consequat.\n    </div>\n  </div>)\n}\nfunction App() {\n  const [text,setText] = useState('')\n  const [articleClickbait,setArticleClickbait] = useState([])\n  const [inputClickbait,setInputClickbait] = useState([])\n  useEffect(()=>api_request(CLICKBAIT_EXAMPLES,setArticleClickbait),[])\n  return (\n    <div style={{margin:20}}>\n        <div style={{textAlign:'center', fontSize: 22,fontWeight:'bold'}}>Clickbait Detector</div>\n        <div style={{display:'flex',flexDirection:'Row',justifyContent:'center',alignItems:'center',margin: 20}}>\n          <input style={{minWidth:400}} placeholder={\"Enter Clickbait Headline\"} onChange={e=>setText(e.target.value)} value={text}></input>\n          <div onClick={()=>api_request([text],setInputClickbait)} style={{cursor:'pointer',backgroundColor:'black', color:'white', borderRadius: 25,marginLeft:20,padding:10}}> Submit</div>\n        </div>\n       {inputClickbait.length ? <div style={{textAlign:'center'}}>Clickbait Probability: {inputClickbait[0]}</div> : <div/>}\n      <div style={{textAlign:'center', fontSize: 22,fontWeight:'bold',margin:20}}>Real-life example</div>\n    <div style={{margin:20}}>\n{makeArticles(CLICKBAIT_EXAMPLES,articleClickbait)}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}